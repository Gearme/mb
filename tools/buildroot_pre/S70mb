#! /bin/sh
#

echo "MB: $0 $1"
[ "$1" != "start" ] && exit
cd /opt

ubiattach /dev/ubi_ctrl -m 3
mount -t ubifs ubi1:data /root

if [ $? -ne 0 ] || [ ! -f /root/mb_etc/S80mb ] || [ ! -d /root/mb_conf ] || [ -f /root/mb_conf/reset ]; then
    umount /root
    ubidetach -m 3
    echo "MB: restore kernel ..."
    state="$(cat /sys/mb/state)"
    cur_ver="${state#*v: }"
    cur_ver="${cur_ver%/*}"
    busybox tar xf *-fw-*.tar mbrush-fw/mb_ser/version -C /tmp --strip 1
    tgt_ver="$(cat /tmp/mb_ser/version)"
    tgt_ver="${tgt_ver#*_}"
    if [ "$cur_ver" != "$tgt_ver" ]; then
        echo "MB: kernel version: $cur_ver -> $tgt_ver ..."
        busybox tar xf *-fw-*.tar mbrush-fw/uImage -C /tmp --strip 1
        flash_erase /dev/mtd1 0 32
        nandwrite -m -p /dev/mtd1 /tmp/uImage
        rm /tmp/uImage
    else
        echo "MB: skip same kernel version: $cur_ver == $tgt_ver"
    fi
    echo "MB: restore rootfs ..."
    ubiformat -y /dev/mtd3
    ubiattach /dev/ubi_ctrl -m 3
    ubimkvol /dev/ubi1 -N data -m
    mount -t ubifs ubi1:data /root || { echo "MB: flash error"; exit; }
    busybox tar xf *-fw-*.tar -C /root --strip 1 --exclude */run.sh --exclude */uImage
    sync
    if [ "$cur_ver" != "$tgt_ver" ]; then
        echo "MB: reboot to new kernel ..."
        reboot
        exit
    fi
fi

echo "MB: start app ..."
/root/mb_etc/S80mb start

